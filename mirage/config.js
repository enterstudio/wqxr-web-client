import config from 'overhaul/config/environment';

export default function() {
  this.namespace = config.wnycURL;

  this.post('/api/v1/analytics/ga/', function() {
    return {};
  });

  this.get('/api/v1/list/comments/:typeId/:storyId/', function(schema, request) {
    // we can just return the data generated by the schema because comments do not
    // have a mirage model, so `createList` just returns the raw attrs
    return {
      results: server.createList('comment', 5)
    }
  });

  this.get('/api/v2/related/:storyId/', function(schema, request) {
    server.createList('story', 5);
    return {
      results: schema.story.all().map(c => c.attrs)
    }
  });

  this.get('/api/v3/channel/shows/:showId/:navSlug/:pageNumber', function(schema, request) {
    let { showId, navSlug, pageNumber } = request.params;
    let id = `shows/${showId}/${navSlug}/${pageNumber}`;
    let apiResponse = schema.apiResponse.find(id);

    if (!apiResponse) {
      return schema.apiResponse.find(server.create('api-response', {id}).id);
    }
    return apiResponse;
  });

  this.get('/', function(schema) {
    return schema.djangoPage.find('/');
  });

  this.get('*upstream_url', function(schema, {params, queryParams}) {
    let qp = Object.keys(queryParams).map(p => `${p}=${queryParams[p]}`);
    let { upstream_url } = params;
    return schema.djangoPage.find(`${qp ? `${upstream_url}?${qp.join('&')}` : upstream_url}`);
  });
};
